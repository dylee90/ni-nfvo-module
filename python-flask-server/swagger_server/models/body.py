# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.vnf_flavor import VNFFlavor  # noqa: F401,E501
from swagger_server import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, flavor: VNFFlavor=None, node: int=None):  # noqa: E501
        """Body - a model defined in Swagger

        :param flavor: The flavor of this Body.  # noqa: E501
        :type flavor: VNFFlavor
        :param node: The node of this Body.  # noqa: E501
        :type node: int
        """
        self.swagger_types = {
            'flavor': VNFFlavor,
            'node': int
        }

        self.attribute_map = {
            'flavor': 'flavor',
            'node': 'node'
        }

        self._flavor = flavor
        self._node = node

    @classmethod
    def from_dict(cls, dikt) -> 'Body':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flavor(self) -> VNFFlavor:
        """Gets the flavor of this Body.


        :return: The flavor of this Body.
        :rtype: VNFFlavor
        """
        return self._flavor

    @flavor.setter
    def flavor(self, flavor: VNFFlavor):
        """Sets the flavor of this Body.


        :param flavor: The flavor of this Body.
        :type flavor: VNFFlavor
        """

        self._flavor = flavor

    @property
    def node(self) -> int:
        """Gets the node of this Body.


        :return: The node of this Body.
        :rtype: int
        """
        return self._node

    @node.setter
    def node(self, node: int):
        """Sets the node of this Body.


        :param node: The node of this Body.
        :type node: int
        """

        self._node = node
